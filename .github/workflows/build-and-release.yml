name: Build and Release

on:
  push:
    tags: [ 'v*' ]

env:
  PYTHON_VERSION: '3.11'

jobs:

  build-windows:
    name: Build Windows Executables
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Create virtual environment
      run: |
        python -m venv .venv
        
    - name: Install dependencies
      run: |
        .venv\Scripts\Activate.ps1
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Lint markdown documentation
      run: |
        .venv\Scripts\Activate.ps1
        echo "Linting markdown documentation..."
        powershell -ExecutionPolicy Bypass -File scripts/lint-markdown.ps1 -SourcePath "docs/" -ReadmePath "README.md" -Fix
        
    - name: Generate PyInstaller spec file
      run: |
        .venv\Scripts\Activate.ps1
        echo "Generating PyInstaller spec file..."
        python tools\generate-spec.py
        
    - name: Build Windows executables
      run: |
        .venv\Scripts\Activate.ps1
        echo "Building on Windows..."
        powershell -ExecutionPolicy Bypass -File scripts/build.ps1 -Platform windows
        
    - name: Upload Windows Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-windows-executables
        path: build-executables/
        retention-days: 30

  create-release:
    name: Create Release
    needs: [build-windows]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for release notes
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Create virtual environment
      run: |
        python -m venv .venv
        
    - name: Install dependencies
      run: |
        .venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Get current version
      id: version
      run: |
        .venv/bin/activate
        VERSION=$(python tools/version_manager.py get --version-file scripts/version.json)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $VERSION"
        
    - name: Check if tag exists
      id: check-tag
      run: |
        if git rev-parse "${{ steps.version.outputs.tag }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Tag ${{ steps.version.outputs.tag }} exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Tag ${{ steps.version.outputs.tag }} does not exist"
        fi
        
    - name: Download Windows Artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-windows-executables
        path: ./build-executables/
        
    - name: Create Release
      if: steps.check-tag.outputs.exists == 'true'
      run: |
        gh release create ${{ steps.version.outputs.tag }} \
          --title "Release ${{ steps.version.outputs.tag }}" \
          --notes "## ðŸŽ‰ JiraUtil ${{ steps.version.outputs.version }} Release
          
          ### ðŸ“¦ Downloads
          
          | Platform | Download |
          |----------|----------|
          | Windows  | [JiraUtil-Windows-v${{ steps.version.outputs.version }}.zip](https://github.com/costa-amore/JiraUtil/releases/download/${{ steps.version.outputs.tag }}/JiraUtil-Windows-v${{ steps.version.outputs.version }}.zip) |
          
          ### ðŸš€ Installation
          
          1. Download the ZIP file for your platform
          2. Extract the ZIP file
          3. Copy \`jira_config.env.template\` to \`jira_config.env\`
          4. Edit \`jira_config.env\` with your Jira credentials
          5. Run \`JiraUtil.exe --help\` to get started
          
          ### ðŸ“– Documentation
          
          - [User Guide](https://github.com/costa-amore/JiraUtil/blob/${{ steps.version.outputs.tag }}/README.md)
          - [Command Reference](https://github.com/costa-amore/JiraUtil/blob/${{ steps.version.outputs.tag }}/docs/command-reference.md)
          
          ### ðŸ”§ Quick Start
          
          \`\`\`bash
          # Check version
          JiraUtil.exe --version
          
          # List available commands
          JiraUtil.exe --help
          
          # Export CSV data
          JiraUtil.exe csv export --help
          \`\`\`
          
          ---
          
          **Full Changelog**: https://github.com/costa-amore/JiraUtil/compare/v1.0.36.0...${{ steps.version.outputs.tag }}" \
          ./build-executables/JiraUtil-Windows-v${{ steps.version.outputs.version }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
